# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: Java CI with Gradle

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
    
    - name: Make gradlew executable
      run: chmod +x gradlew

    - name: Build with Gradle
      id: build
      run: |
        ./gradlew build
        if [ $? -eq 0 ]; then
          echo "::set-output name=status::success"
        else
          echo "::set-output name=status::failure"
        fi
      continue-on-error: true

    - name: Test with Gradle
      if: steps.build.outputs.status == 'success'
      run: ./gradlew test

    - name: Calculate Grade
      run: |
        if [ "${{ steps.build.outputs.status }}" != "success" ]; then
          echo "GRADE=0" >> $GITHUB_ENV
          echo "Build or tests failed. Grade set to 0."
        else
          total_tests=65
          passed_tests=$(grep -o '<testcase' build/test-results/test/TEST-*.xml | wc -l)
          grade=$(awk "BEGIN {print int(($passed_tests/$total_tests)*100)}")
          echo "Passed $passed_tests out of $total_tests tests. Grade: $grade%"
          echo "GRADE=$grade" >> $GITHUB_ENV
        fi
